
# 아나콘다의 특징 : 가상 환경을 사용한다.
# 제일 먼저 할 일 : 사용할 가상 환경 선택하기




# ----- spyder -----
# 원하는 부분만 실행하기 - run selection : 드래그한 부분만 실행됨

# 인터넷에서 정보를 가져와보자

import requests 
from bs4 import BeautifulSoup
# 패키지 이름, 모듈 이름
# Beautifulsoup : HTML 코드 분석 모듈

url = 'https://sports.news.naver.com/kfootball/index'

# 해당 주소에 요청을 보내는 함수
response = requests.get(url)

# 응답을 출력하면, 응답 코드가 뜬다.
# 200 : 응답이 잘 처리됐다
# 404 : 요청이 잘못되었다

# print(response.text)
# text를 사용하면 내부 변수도 확인 가능
# 네이버 주소를 입력해놨으면, 네이버 페이지의 소스 코드가 출력

# HTML : 웹 사이트 만드는 언어
# HTML 소스의 기본 단위, tag 
# <a>증권</a> : 증권이라는 텍스트는 a tag에 포함되어 있다는 뜻
# tag 안에 tag를 포함할 수 있다
# class : 똑같은 tag를 구분하는 방법

htmlCode = response.text
soup = BeautifulSoup(htmlCode, 'html.parser') # html을 분석하겠다는 문자열
# BS = 문자열로 되어있는 코드를 실제 객체로 변환해줌

# print(soup)
# 위의 response와 같은 결과가 나온당

result = soup.select_one('span.week')
# select_one : 내가 제시하는 해당 요소 가져오기
# select 작업 시, 점(.)은 class를 나타내는 기호
# .을 기준으로 앞은 tag 이름, 뒤는 class 이름

print(result) # 선택한 tag 보기
print(result.text) # 선택한 tag의 내용만 보기


# 어떤 tag 안에 포함되어 있는지까지 명시하기
result2 = soup.select_one('span.day > span.week')
print(result2)
print(result2.text) 
# 결과는 동일하지만 방법이 다름
# 구체적으로 명시하기 때문에 실패 확률이 줄어듦
