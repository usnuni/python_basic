
# -----직접 해보기-----

import requests
from bs4 import BeautifulSoup

url = 'https://entertain.naver.com/movie'

response = requests.get(url)
htmlCode = response.text

bs = BeautifulSoup(htmlCode, 'html.parser')

tits = bs.select('a.tit')

# 특정 관련 기사만 보고 싶을 때, 필터링
# 파이썬에서 처리해보기

keyword = '늑대사냥'

for title in tits:
    if keyword in title.text :
        print(title.text)
    else :
        continue
        
        

# ------ 이미지 쇼스 추출해서 저장하기 ------

import requests
from bs4 import BeautifulSoup

url = 'https://entertain.naver.com/movie'

response = requests.get(url)
htmlCode = response.text

bs = BeautifulSoup(htmlCode, 'html.parser')

# 이미지 가져와보기
# 이미지에만 있는 식별자 src (소스)

images = bs.select('img')
imgLength = len(images)
# 이미지 태그에서 원본 소스만 따로 읽어보자

for image in images :
    source = image.attrs['src'] # arrtibutes : 이미지가 가지고 있는 속성
    print(source) # 속성중에 src의 값만 따로 출력
       
# 원본소스에 있는 이미지를 내 컴퓨터에 저장해보자

lastImage = images[imgLength - 1] # 마지막 요소에 접근
lastSrc = lastImage.attrs['src']

f = open('image.jpg', 'wb')
# wb = 바이너리 형식으로 쓴다 (이미지 처리할 때 쓴다)

imgResponse = requests.get(lastSrc)
f.write(imgResponse.content)
f.close()


# -----코스피 지수 확인해보기 -----

import requests
from bs4 import BeautifulSoup

url = 'https://finance.naver.com/'

response = requests.get(url)
htmlCode = response.text

bs = BeautifulSoup(htmlCode, 'html.parser')

# kospi = bs.select_one('span.num') 여러개가 있으니까 고르자
# 좀 더 구체적으로 선택해주기 - 태그의 포함관계 확인

kospi = bs.select_one('div > a > span > span.num')
# 몇 단계를 선택할지는 자유
print(kospi)
print(kospi.text)



# -----내가 선택한 종목 시세에서 현재가 가져오기(한국전력)-----
# 그리고 그 내용이 쓰여있는 파일 price.txt를 만들어 확인

import requests
from bs4 import BeautifulSoup

url = 'https://finance.naver.com/item/sise.naver?code=015760'

response = requests.get(url)
htmlCode = response.text

bs = BeautifulSoup(htmlCode, 'html.parser')

qian = bs.select_one('tbody > tr > td.num')
# or qian = bs.select_one('strong#_nowVal.tag.p11')
# 개발자 도구에 있는대로 가져오기

print(qian.text)

f = open('price.txt', 'w')
f.write(f'한국전력의 현재가는 {qian.txt}원입니다.')
f.close()
