# 엑셀 파일 가져오기

import pandas as pd

rx = pd.read_excel('stock.xlsx')

# 1행은 자동으로 열 이름으로 출력된다
# 설정되지 않게 할 수도 있음 (아직 안 함)

# 내용 추가하기
rx.loc[5] = ['미래융합', 50000, 300]

print(rx)

# 데이터 프레임을 엑셀 형식으로 내보내기(export)
# 같은 이름으로 하면 덮어쓰기, 새로운 이름을 하면 파일 생성
rx.to_excel('result.xlsx', index = False)
# 행 번호를 표시하고 싶지 않으면, index = False



# ----- 웹에서 가져온 데이터를 데이터프레임으로 처리 -----

import pandas as pd
import requests as req
from bs4 import BeautifulSoup

# 카카오페이 시세 페이지에서 소스코드 가져오기
url1 = 'https://finance.naver.com/item/sise.naver?code=377300'
res1 = req.get(url1)
html = res1.text

#구조 해석하여 가격 정보만 추출하기 (스크래핑)
bs = BeautifulSoup(html, 'html.parser')
price = bs.select_one('#_nowVal')
price1 = price.text

# kb금융으로 똑같은 작업 다시 하기
url2 = 'https://finance.naver.com/item/sise.naver?code=105560'
res2 = req.get(url2)
html = res2.text

bs = BeautifulSoup(html, 'html.parser')
price = bs.select_one('#_nowVal')
price2 = price.text

print(price1)
print(price2)

ms = [
    ['카카오페이', price1],
    ['KB금융', price2]
]
print(ms)

# *******데이터프레임으로 만들어 줘야지 엑셀에 저장이 된다.******
df = pd.DataFrame(ms, columns = ['종목명', '현재가'])
print(df)

# 두 종목의 가격 정보를 쓴 엑셀파일 만들어보기
df.to_excel('mystock.xlsx', index = False)
