
# class : 자료형을 뜻한다.
# class는 사용자가 직접 만들 수 있다.



# 사용자 정의 class : 기본 자료형의 모음집
# 사용자 정의 클래스의 이름은 대문자로 시작하는 것이 바람직하다.

class Point :
    xpos = 3
    ypos = 5


# 사용자 정의로 clas를 생성할 때에는 ()를 붙여준다

p = Point()
print(p.xpos)
print(p.ypos)

print(type(p))
# <class '__main__.Point'>가 출력되는데,
# 여기서 main은 현재 실행되고 있다는 뜻.


# 데이터를 여러개 생성하는 것도 가능
# 자료형을 한 번 만들어두면, 데이터 개수는 제한이 없다.
p2 = Point()
print(p2.xpos)
print(p2.ypos)
p3 = Point()
print(p3.xpos)
print(p3.ypos)

# class를 통해 만든 데이터를 '객체'라고 표현한다.


# 파이썬의 객체 : 데이터(변수)와 기능(내장함수)을 가진다.
# 사용자 정의 class에 함수를 내장할 때는,
# 첫 번째 매개변수로 self 라는 것을 써 준다. (반드시 있어야 함)


s = "hello"
s = s.replace('h', 'k')
print(s)

class Cat :
    def running(self) : 
        print('우다다다')
c = Cat()
c.running()




class Dog :
    def setSpec(self, n, p) :
        self.name = n
        self.pattern = p
    def introduce(self) :
        form = '저의 이름은 %s이고요, 무늬는 %s입니다.'
        print(form % (self.name, self.pattern))

d = Dog()
e = Dog()
d.setSpec('Tom', 'White')
e.setSpec('kitty', 'pink')

# self : 객체 그 자신을 뜻함, 객체를 서로 구분하는 역할
# d가 호출하면 self -> d, e가 호출하면 self -> e

print(d.name)
print(e.name)

d.introduce()
e.introduce()
# 이미 print를 포함하고 있기 때문에 안 써도 됨




